name: 'Build & Test Pipeline'

on:
  push:
    branches: ['main']
    paths-ignore: ['**.md', 'docs/**']

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: false

jobs:
  test-and-coverage:
    name: 'Test & Coverage Analysis'
    runs-on: ubuntu-latest
    container:
      image: mcr.microsoft.com/playwright:v1.56.1-jammy
      options: --ipc=host
    timeout-minutes: 20
    permissions:
      contents: read
      checks: write
      pull-requests: write

    env:
      PLAYWRIGHT_BROWSERS_PATH: /ms-playwright
      PLAYWRIGHT_SKIP_BROWSER_DOWNLOAD: '1'
      NEXT_PUBLIC_SANITY_PROJECT_ID: ${{ secrets.NEXT_PUBLIC_SANITY_PROJECT_ID }}
      NEXT_PUBLIC_SANITY_DATASET: ${{ secrets.NEXT_PUBLIC_SANITY_DATASET }}
      NEXT_PUBLIC_SANITY_API_VERSION: ${{ secrets.NEXT_PUBLIC_SANITY_API_VERSION }}
      NEXT_PUBLIC_STUDIO_URL: ${{ secrets.NEXT_PUBLIC_STUDIO_URL }}
      SANITY_API_TOKEN: ${{ secrets.SANITY_API_TOKEN }}
      SANITY_VIEWER_TOKEN: ${{ secrets.SANITY_VIEWER_TOKEN }}
      SANITY_REVALIDATE_SECRET: ${{ secrets.SANITY_REVALIDATE_SECRET }}
      SANITY_WEBHOOK_SECRET: ${{ secrets.SANITY_WEBHOOK_SECRET }}
      SANITY_PREVIEW_SECRET: ${{ secrets.SANITY_PREVIEW_SECRET }}
      RESEND_API_KEY: ${{ secrets.RESEND_API_KEY }}

    steps:
      - name: 'Checkout code'
        uses: actions/checkout@v5

      - name: '⚙️ Setup Environment'
        uses: ./.github/actions/setup
        with:
          node-version: '22'
          pnpm-version: '10.15.1'
          working-directory: ''

      - name: '🗂️ Cache Next.js build'
        uses: actions/cache@v4
        with:
          path: packages/leenders-coaching-nl/.next/cache
          key: nextjs-${{ runner.os }}-${{ hashFiles('**/pnpm-lock.yaml') }}-${{ hashFiles('packages/leenders-coaching-nl/**/*.{js,jsx,ts,tsx}') }}
          restore-keys: |
            nextjs-${{ runner.os }}-${{ hashFiles('**/pnpm-lock.yaml') }}-
            nextjs-${{ runner.os }}-

      - name: '🧪 Run Tests & Coverage'
        uses: ./.github/actions/test
        with:
          test-command: ci:test
          quality-command: ci:quality
          security-command: ci:security
          coverage-upload: true
          working-directory: ''
          codecov-token: ${{ secrets.CODECOV_TOKEN }}
          github-sha: ${{ github.sha }}
          env: |
            {
              "PLAYWRIGHT_BROWSERS_PATH": "/ms-playwright",
              "PLAYWRIGHT_SKIP_BROWSER_DOWNLOAD": "1",
              "NEXT_PUBLIC_SANITY_PROJECT_ID": "${{ secrets.NEXT_PUBLIC_SANITY_PROJECT_ID }}",
              "NEXT_PUBLIC_SANITY_DATASET": "${{ secrets.NEXT_PUBLIC_SANITY_DATASET }}",
              "NEXT_PUBLIC_SANITY_API_VERSION": "${{ secrets.NEXT_PUBLIC_SANITY_API_VERSION }}",
              "SANITY_API_TOKEN": "${{ secrets.SANITY_API_TOKEN }}",
              "RESEND_API_KEY": "${{ secrets.RESEND_API_KEY }}"
            }

  production-build:
    name: 'Production Build'
    strategy:
      matrix:
        package:
          [
            {
              name: 'frontend',
              filter: 'leenders-coaching-nl',
              path: 'packages/leenders-coaching-nl',
            },
            {
              name: 'studio',
              filter: 'studio-leenders-coaching-nl',
              path: 'packages/studio-leenders-coaching-nl',
            },
          ]

    runs-on: ubuntu-latest
    needs: [test-and-coverage]
    timeout-minutes: 15
    steps:
      - name: 'Checkout code'
        uses: actions/checkout@v5
      - name: '🏗️ Build Package'
        uses: ./.github/actions/build
        with:
          package-name: ${{ matrix.package.name }}
          package-filter: ${{ matrix.package.filter }}
          package-path: ${{ matrix.package.path }}
          build-command: 'build'
          verify-command: 'verify:build'
          analyze-bundle: ${{ matrix.package.name == 'frontend' }}
          analyze-command: 'analyze:bundle'
          package-build: ${{ matrix.package.name == 'frontend' }}
          package-command: 'package:build'
          cache-nextjs: ${{ matrix.package.name == 'frontend' }}
          working-directory: ''
          github-sha: ${{ github.sha }}
          env: |
            {
              "NEXT_PUBLIC_SANITY_PROJECT_ID": "${{ secrets.NEXT_PUBLIC_SANITY_PROJECT_ID }}",
              "NEXT_PUBLIC_SANITY_DATASET": "${{ secrets.NEXT_PUBLIC_SANITY_DATASET }}",
              "NEXT_PUBLIC_SANITY_API_VERSION": "${{ secrets.NEXT_PUBLIC_SANITY_API_VERSION }}",
              "NEXT_PUBLIC_STUDIO_URL": "${{ secrets.NEXT_PUBLIC_STUDIO_URL }}",
              "SANITY_API_TOKEN": "${{ secrets.SANITY_API_TOKEN }}",
              "SANITY_AUTH_TOKEN": "${{ secrets.SANITY_AUTH_TOKEN }}",
              "SANITY_VIEWER_TOKEN": "${{ secrets.SANITY_VIEWER_TOKEN }}",
              "RESEND_API_KEY": "${{ secrets.RESEND_API_KEY }}"
            }

  content-validation:
    name: 'Content & Schema Validation'
    runs-on: ubuntu-latest
    timeout-minutes: 10

    env:
      SANITY_API_TOKEN: ${{ secrets.SANITY_API_TOKEN }}
      SANITY_AUTH_TOKEN: ${{ secrets.SANITY_AUTH_TOKEN }}
      SANITY_VIEWER_TOKEN: ${{ secrets.SANITY_VIEWER_TOKEN }}
      SANITY_REVALIDATE_SECRET: ${{ secrets.SANITY_REVALIDATE_SECRET }}
      SANITY_WEBHOOK_SECRET: ${{ secrets.SANITY_WEBHOOK_SECRET }}
      SANITY_PREVIEW_SECRET: ${{ secrets.SANITY_PREVIEW_SECRET }}

    steps:
      - name: 'Checkout code'
        uses: actions/checkout@v5
      - name: '⚙️ Setup Environment'
        uses: ./.github/actions/setup
        with:
          node-version: '22'
          pnpm-version: '10.15.1'
          working-directory: ''

      - name: '🔍 Extract and validate schema'
        run: pnpm --filter studio-leenders-coaching-nl run validate:schema

      - name: '🔄 Generate TypeScript types'
        run: pnpm run generate:types

      - name: '✅ Verify type generation'
        run: pnpm run validate:types

      - name: '📤 Upload schema artifacts'
        uses: actions/upload-artifact@v4
        with:
          name: sanity-schema-${{ github.sha }}
          path: |
            packages/studio-leenders-coaching-nl/schema.json
            packages/studio-leenders-coaching-nl/sanity-typegen.json
          retention-days: 30

  security-analysis:
    name: 'Security Analysis'
    runs-on: ubuntu-latest
    timeout-minutes: 8

    steps:
      - name: '🔄 Checkout repository'
        uses: actions/checkout@v5

      - name: '⚙️ Setup Environment'
        uses: ./.github/actions/setup
        with:
          node-version: '22'
          pnpm-version: '10.15.1'
          working-directory: ''

      - name: '🔒 Run security audit'
        run: pnpm run audit

      - name: '📊 Check for outdated dependencies'
        run: pnpm run outdated || echo "📈 Some dependencies can be updated"

  deployment-readiness:
    name: 'Deployment Readiness'
    runs-on: ubuntu-latest
    needs: [production-build, content-validation, security-analysis]
    if: github.ref == 'refs/heads/main'
    timeout-minutes: 5

    steps:
      - name: '✅ All checks passed'
        run: |
          echo "🎉 All quality gates passed!"
          echo "🚀 Ready for deployment to production"

      - name: '📝 Deployment summary'
        run: |
          echo "## 🚀 Deployment Summary" >> $GITHUB_STEP_SUMMARY
          echo "- ✅ All tests passed" >> $GITHUB_STEP_SUMMARY
          echo "- ✅ Frontend build successful" >> $GITHUB_STEP_SUMMARY
          echo "- ✅ Studio build successful" >> $GITHUB_STEP_SUMMARY
          echo "- ✅ Content validation passed" >> $GITHUB_STEP_SUMMARY
          echo "- ✅ Security analysis completed" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "**Branch:** \`${{ github.ref_name }}\`" >> $GITHUB_STEP_SUMMARY
          echo "**Commit:** \`${{ github.sha }}\`" >> $GITHUB_STEP_SUMMARY
