name: 'Build & Test Pipeline'

on:
  push:
    branches: ['main']
    paths-ignore: ['**.md', 'docs/**']

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: false

jobs:
  # Setup environment
  setup:
    uses: ./.github/workflows/setup.yml

  test-and-coverage:
    name: 'Test & Coverage Analysis'
    runs-on: ubuntu-latest
    needs: setup
    timeout-minutes: 20

    env:
      NEXT_PUBLIC_SANITY_PROJECT_ID: ${{ secrets.NEXT_PUBLIC_SANITY_PROJECT_ID }}
      NEXT_PUBLIC_SANITY_DATASET: ${{ secrets.NEXT_PUBLIC_SANITY_DATASET }}
      NEXT_PUBLIC_SANITY_API_VERSION: ${{ secrets.NEXT_PUBLIC_SANITY_API_VERSION }}
      SANITY_API_TOKEN: ${{ secrets.SANITY_API_TOKEN }}
      RESEND_API_KEY: ${{ secrets.RESEND_API_KEY }}

    outputs:
      cache-key: ${{ needs.setup.outputs.cache-key }}

    steps:
      - name: '🔄 Checkout repository'
        uses: actions/checkout@v5
        with:
          fetch-depth: 0

      - name: '🗂️ Cache Next.js build'
        uses: actions/cache@v4
        with:
          path: packages/leenders-coaching-nl/.next/cache
          key: nextjs-${{ runner.os }}-${{ hashFiles('**/pnpm-lock.yaml') }}-${{ hashFiles('packages/leenders-coaching-nl/**/*.{js,jsx,ts,tsx}') }}
          restore-keys: |
            nextjs-${{ runner.os }}-${{ hashFiles('**/pnpm-lock.yaml') }}-
            nextjs-${{ runner.os }}-

      - name: '📥 Install dependencies'
        run: pnpm run ci:install:frozen

      - name: '🔒 Audit dependencies'
        run: pnpm run ci:security
        continue-on-error: true

      - name: '🔍 Quality checks'
        run: pnpm run ci:quality

      - name: '🧪 Run comprehensive tests'
        run: pnpm run ci:test

      - name: '📊 Upload coverage to Codecov'
        uses: codecov/codecov-action@v5
        with:
          token: ${{ secrets.CODECOV_TOKEN }}
          directory: ./packages/leenders-coaching-nl/coverage
          fail_ci_if_error: false
          verbose: true
          flags: frontend

      - name: '📤 Upload test results'
        uses: actions/upload-artifact@v4
        if: always()
        with:
          name: test-results-${{ github.sha }}
          path: |
            packages/leenders-coaching-nl/coverage/
            packages/leenders-coaching-nl/test-results/
          retention-days: 30

  production-build:
    name: 'Production Build'
    strategy:
      matrix:
        package:
          [
            {
              name: 'frontend',
              filter: 'leenders-coaching-nl',
              path: 'packages/leenders-coaching-nl',
            },
            {
              name: 'studio',
              filter: 'studio-leenders-coaching-nl',
              path: 'packages/studio-leenders-coaching-nl',
            },
          ]

    uses: ./.github/workflows/build.yml
    needs: [test-and-coverage, setup]
    with:
      package-name: ${{ matrix.package.name }}
      package-filter: ${{ matrix.package.filter }}
      build-command: 'build:${{ matrix.package.name }}'
      verify-command: 'verify:build'
      analyze-bundle: ${{ matrix.package.name == 'frontend' }}
      analyze-command: 'analyze:bundle'
      package-build: true
      package-command: 'package:build'
      cache-nextjs: ${{ matrix.package.name == 'frontend' }}
      working-directory: ''
    secrets:
      NEXT_PUBLIC_SANITY_PROJECT_ID: ${{ secrets.NEXT_PUBLIC_SANITY_PROJECT_ID }}
      NEXT_PUBLIC_SANITY_DATASET: ${{ secrets.NEXT_PUBLIC_SANITY_DATASET }}
      NEXT_PUBLIC_SANITY_API_VERSION: ${{ secrets.NEXT_PUBLIC_SANITY_API_VERSION }}
      SANITY_API_TOKEN: ${{ secrets.SANITY_API_TOKEN }}
      RESEND_API_KEY: ${{ secrets.RESEND_API_KEY }}

  content-validation:
    name: 'Content & Schema Validation'
    runs-on: ubuntu-latest
    needs: setup
    timeout-minutes: 10

    env:
      SANITY_API_TOKEN: ${{ secrets.SANITY_API_TOKEN }}

    steps:
      - name: '🔄 Checkout repository'
        uses: actions/checkout@v5

      - name: '📥 Install dependencies'
        run: pnpm run ci:install:frozen

      - name: '🔍 Extract and validate schema'
        run: pnpm --filter studio-leenders-coaching-nl run validate:schema

      - name: '🔄 Generate TypeScript types'
        run: pnpm run generate:types

      - name: '✅ Verify type generation'
        run: pnpm run validate:types

      - name: '📤 Upload schema artifacts'
        uses: actions/upload-artifact@v4
        with:
          name: sanity-schema-${{ github.sha }}
          path: |
            packages/studio-leenders-coaching-nl/schema.json
            packages/studio-leenders-coaching-nl/sanity-typegen.json
          retention-days: 30

  security-analysis:
    name: 'Security Analysis'
    runs-on: ubuntu-latest
    needs: setup
    timeout-minutes: 8

    steps:
      - name: '🔄 Checkout repository'
        uses: actions/checkout@v5

      - name: '📥 Install dependencies'
        run: pnpm run ci:install:frozen

      - name: '🔒 Run security audit'
        run: pnpm run audit

      - name: '📊 Check for outdated dependencies'
        run: pnpm run outdated || echo "📈 Some dependencies can be updated"

  deployment-readiness:
    name: 'Deployment Readiness'
    runs-on: ubuntu-latest
    needs: [production-build, content-validation, security-analysis, setup]
    if: github.ref == 'refs/heads/main'
    timeout-minutes: 5

    steps:
      - name: '✅ All checks passed'
        run: |
          echo "🎉 All quality gates passed!"
          echo "🚀 Ready for deployment to production"

      - name: '📝 Deployment summary'
        run: |
          echo "## 🚀 Deployment Summary" >> $GITHUB_STEP_SUMMARY
          echo "- ✅ All tests passed" >> $GITHUB_STEP_SUMMARY
          echo "- ✅ Frontend build successful" >> $GITHUB_STEP_SUMMARY
          echo "- ✅ Studio build successful" >> $GITHUB_STEP_SUMMARY
          echo "- ✅ Content validation passed" >> $GITHUB_STEP_SUMMARY
          echo "- ✅ Security analysis completed" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "**Branch:** \`${{ github.ref_name }}\`" >> $GITHUB_STEP_SUMMARY
          echo "**Commit:** \`${{ github.sha }}\`" >> $GITHUB_STEP_SUMMARY
