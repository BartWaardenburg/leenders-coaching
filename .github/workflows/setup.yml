name: 'Reusable Setup Workflow'

on:
  workflow_call:
    inputs:
      node-version:
        description: 'Node.js version to use'
        required: false
        default: '22'
        type: string
      pnpm-version:
        description: 'pnpm version to use'
        required: false
        default: '10.15.1'
        type: string
      install-command:
        description: 'Install command to run'
        required: false
        default: 'ci:install:frozen'
        type: string
      cache-key:
        description: 'Custom cache key for pnpm store'
        required: false
        default: ''
        type: string
      working-directory:
        description: 'Working directory for the job'
        required: false
        default: ''
        type: string
    outputs:
      cache-key:
        description: 'Generated cache key for pnpm store'
        value: ${{ jobs.setup.outputs.cache-key }}
      pnpm-store-path:
        description: 'Path to pnpm store'
        value: ${{ jobs.setup.outputs.pnpm-store-path }}

jobs:
  setup:
    name: 'Setup Environment'
    runs-on: ubuntu-latest
    timeout-minutes: 10
    outputs:
      cache-key: ${{ steps.cache-key.outputs.key }}
      pnpm-store-path: ${{ steps.pnpm-store-path.outputs.path }}

    steps:
      - name: 'ðŸ”„ Checkout repository'
        uses: actions/checkout@v5
        with:
          fetch-depth: 0

      - name: 'ðŸ”§ Setup Node.js'
        uses: actions/setup-node@v4
        with:
          node-version: ${{ inputs.node-version }}

      - name: 'ðŸ“¦ Setup pnpm'
        uses: pnpm/action-setup@v4
        with:
          version: ${{ inputs.pnpm-version }}
          run_install: false

      - name: 'ðŸŽ¯ Generate cache key'
        id: cache-key
        run: |
          if [[ -n "${{ inputs.cache-key }}" ]]; then
            echo "key=${{ inputs.cache-key }}" >> $GITHUB_OUTPUT
          else
            echo "key=pnpm-${{ runner.os }}-${{ hashFiles('**/pnpm-lock.yaml') }}" >> $GITHUB_OUTPUT
          fi

      - name: 'Get pnpm store path'
        id: pnpm-store-path
        run: echo "path=$(pnpm store path)" >> $GITHUB_OUTPUT

      - name: 'ðŸ’¾ Cache pnpm store'
        uses: actions/cache@v4
        with:
          path: ${{ steps.pnpm-store-path.outputs.path }}
          key: ${{ steps.cache-key.outputs.key }}
          restore-keys: |
            pnpm-${{ runner.os }}-

      - name: 'ðŸ“¥ Install dependencies'
        working-directory: ${{ inputs.working-directory }}
        run: pnpm run ${{ inputs.install-command }}
