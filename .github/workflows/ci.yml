name: 'Continuous Integration'

on:
  pull_request:
    branches: ['main']
    paths-ignore: ['**.md', 'docs/**']

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

permissions:
  contents: read
  pull-requests: write
  issues: write

jobs:
  quality-checks:
    name: 'Quality Checks'
    runs-on: ubuntu-latest
    container:
      image: mcr.microsoft.com/playwright:v1.55.0-jammy
      options: --ipc=host
    timeout-minutes: 10

    env:
      NEXT_PUBLIC_SANITY_PROJECT_ID: ${{ secrets.NEXT_PUBLIC_SANITY_PROJECT_ID }}
      NEXT_PUBLIC_SANITY_DATASET: ${{ secrets.NEXT_PUBLIC_SANITY_DATASET }}
      NEXT_PUBLIC_SANITY_API_VERSION: ${{ secrets.NEXT_PUBLIC_SANITY_API_VERSION }}
      NEXT_PUBLIC_STUDIO_URL: ${{ secrets.NEXT_PUBLIC_STUDIO_URL }}
      SANITY_API_TOKEN: ${{ secrets.SANITY_API_TOKEN }}
      SANITY_VIEWER_TOKEN: ${{ secrets.SANITY_VIEWER_TOKEN }}
      SANITY_REVALIDATE_SECRET: ${{ secrets.SANITY_REVALIDATE_SECRET }}
      SANITY_WEBHOOK_SECRET: ${{ secrets.SANITY_WEBHOOK_SECRET }}
      SANITY_PREVIEW_SECRET: ${{ secrets.SANITY_PREVIEW_SECRET }}
      RESEND_API_KEY: ${{ secrets.RESEND_API_KEY }}

    steps:
      - name: 'Checkout code'
        uses: actions/checkout@v5
      - name: '‚öôÔ∏è Run Quality Checks'
        uses: ./.github/actions/test
        with:
          test-command: ''
          quality-command: ci:quality
          security-command: ''
          coverage-upload: false
          working-directory: ''
          codecov-token: ${{ secrets.CODECOV_TOKEN }}
          github-sha: ${{ github.sha }}
          env: |
            {
              "NEXT_PUBLIC_SANITY_PROJECT_ID": "${{ secrets.NEXT_PUBLIC_SANITY_PROJECT_ID }}",
              "NEXT_PUBLIC_SANITY_DATASET": "${{ secrets.NEXT_PUBLIC_SANITY_DATASET }}",
              "NEXT_PUBLIC_SANITY_API_VERSION": "${{ secrets.NEXT_PUBLIC_SANITY_API_VERSION }}",
              "NEXT_PUBLIC_STUDIO_URL": "${{ secrets.NEXT_PUBLIC_STUDIO_URL }}",
              "SANITY_API_TOKEN": "${{ secrets.SANITY_API_TOKEN }}",
              "SANITY_VIEWER_TOKEN": "${{ secrets.SANITY_VIEWER_TOKEN }}",
              "RESEND_API_KEY": "${{ secrets.RESEND_API_KEY }}"
            }

  frontend-tests:
    name: 'Frontend Tests'
    runs-on: ubuntu-latest
    container:
      image: mcr.microsoft.com/playwright:v1.55.0-jammy
      options: --ipc=host
    timeout-minutes: 15
    permissions:
      contents: read
      checks: write
      pull-requests: write

    env:
      PLAYWRIGHT_BROWSERS_PATH: /ms-playwright
      PLAYWRIGHT_SKIP_BROWSER_DOWNLOAD: '1'
      NEXT_PUBLIC_SANITY_PROJECT_ID: ${{ secrets.NEXT_PUBLIC_SANITY_PROJECT_ID }}
      NEXT_PUBLIC_SANITY_DATASET: ${{ secrets.NEXT_PUBLIC_SANITY_DATASET }}
      NEXT_PUBLIC_SANITY_API_VERSION: ${{ secrets.NEXT_PUBLIC_SANITY_API_VERSION }}
      NEXT_PUBLIC_STUDIO_URL: ${{ secrets.NEXT_PUBLIC_STUDIO_URL }}
      SANITY_API_TOKEN: ${{ secrets.SANITY_API_TOKEN }}
      SANITY_VIEWER_TOKEN: ${{ secrets.SANITY_VIEWER_TOKEN }}
      SANITY_REVALIDATE_SECRET: ${{ secrets.SANITY_REVALIDATE_SECRET }}
      SANITY_WEBHOOK_SECRET: ${{ secrets.SANITY_WEBHOOK_SECRET }}
      SANITY_PREVIEW_SECRET: ${{ secrets.SANITY_PREVIEW_SECRET }}
      RESEND_API_KEY: ${{ secrets.RESEND_API_KEY }}

    steps:
      - name: 'Checkout code'
        uses: actions/checkout@v5

      - name: '‚öôÔ∏è Setup Environment'
        uses: ./.github/actions/setup
        with:
          node-version: '22'
          pnpm-version: '10.15.1'
          working-directory: ''

      - name: 'üß™ Run Frontend Tests'
        uses: ./.github/actions/test
        with:
          test-command: ci:test
          quality-command: ''
          security-command: ''
          coverage-upload: true
          working-directory: ''
          codecov-token: ${{ secrets.CODECOV_TOKEN }}
          github-sha: ${{ github.sha }}
          env: |
            {
              "PLAYWRIGHT_BROWSERS_PATH": "/ms-playwright",
              "PLAYWRIGHT_SKIP_BROWSER_DOWNLOAD": "1",
              "NEXT_PUBLIC_SANITY_PROJECT_ID": "${{ secrets.NEXT_PUBLIC_SANITY_PROJECT_ID }}",
              "NEXT_PUBLIC_SANITY_DATASET": "${{ secrets.NEXT_PUBLIC_SANITY_DATASET }}",
              "NEXT_PUBLIC_SANITY_API_VERSION": "${{ secrets.NEXT_PUBLIC_SANITY_API_VERSION }}",
              "SANITY_API_TOKEN": "${{ secrets.SANITY_API_TOKEN }}",
              "RESEND_API_KEY": "${{ secrets.RESEND_API_KEY }}"
            }

  studio-validation:
    name: 'Studio Validation'
    runs-on: ubuntu-latest
    timeout-minutes: 15

    env:
      NEXT_PUBLIC_SANITY_PROJECT_ID: ${{ secrets.NEXT_PUBLIC_SANITY_PROJECT_ID }}
      NEXT_PUBLIC_SANITY_DATASET: ${{ secrets.NEXT_PUBLIC_SANITY_DATASET }}
      NEXT_PUBLIC_SANITY_API_VERSION: ${{ secrets.NEXT_PUBLIC_SANITY_API_VERSION }}
      NEXT_PUBLIC_STUDIO_URL: ${{ secrets.NEXT_PUBLIC_STUDIO_URL }}
      SANITY_API_TOKEN: ${{ secrets.SANITY_API_TOKEN }}
      SANITY_AUTH_TOKEN: ${{ secrets.SANITY_AUTH_TOKEN }}
      SANITY_VIEWER_TOKEN: ${{ secrets.SANITY_VIEWER_TOKEN }}
      SANITY_REVALIDATE_SECRET: ${{ secrets.SANITY_REVALIDATE_SECRET }}
      SANITY_WEBHOOK_SECRET: ${{ secrets.SANITY_WEBHOOK_SECRET }}
      SANITY_PREVIEW_SECRET: ${{ secrets.SANITY_PREVIEW_SECRET }}
      RESEND_API_KEY: ${{ secrets.RESEND_API_KEY }}

    steps:
      - name: 'Checkout code'
        uses: actions/checkout@v5
      - name: 'üèóÔ∏è Build Studio'
        uses: ./.github/actions/build
        with:
          package-name: 'studio'
          package-filter: 'studio-leenders-coaching-nl'
          package-path: 'packages/studio-leenders-coaching-nl'
          build-command: 'build'
          verify-command: 'validate:schema'
          analyze-bundle: false
          package-build: false
          working-directory: ''
          github-sha: ${{ github.sha }}
          env: |
            {
              "NEXT_PUBLIC_SANITY_PROJECT_ID": "${{ secrets.NEXT_PUBLIC_SANITY_PROJECT_ID }}",
              "NEXT_PUBLIC_SANITY_DATASET": "${{ secrets.NEXT_PUBLIC_SANITY_DATASET }}",
              "NEXT_PUBLIC_SANITY_API_VERSION": "${{ secrets.NEXT_PUBLIC_SANITY_API_VERSION }}",
              "NEXT_PUBLIC_STUDIO_URL": "${{ secrets.NEXT_PUBLIC_STUDIO_URL }}",
              "SANITY_API_TOKEN": "${{ secrets.SANITY_API_TOKEN }}",
              "SANITY_AUTH_TOKEN": "${{ secrets.SANITY_AUTH_TOKEN }}",
              "SANITY_VIEWER_TOKEN": "${{ secrets.SANITY_VIEWER_TOKEN }}",
              "RESEND_API_KEY": "${{ secrets.RESEND_API_KEY }}"
            }

  build-verification:
    name: 'Build Verification'
    runs-on: ubuntu-latest
    needs: [frontend-tests, studio-validation]
    timeout-minutes: 15

    env:
      NEXT_PUBLIC_SANITY_PROJECT_ID: ${{ secrets.NEXT_PUBLIC_SANITY_PROJECT_ID }}
      NEXT_PUBLIC_SANITY_DATASET: ${{ secrets.NEXT_PUBLIC_SANITY_DATASET }}
      NEXT_PUBLIC_SANITY_API_VERSION: ${{ secrets.NEXT_PUBLIC_SANITY_API_VERSION }}
      NEXT_PUBLIC_STUDIO_URL: ${{ secrets.NEXT_PUBLIC_STUDIO_URL }}
      SANITY_API_TOKEN: ${{ secrets.SANITY_API_TOKEN }}
      SANITY_VIEWER_TOKEN: ${{ secrets.SANITY_VIEWER_TOKEN }}
      SANITY_REVALIDATE_SECRET: ${{ secrets.SANITY_REVALIDATE_SECRET }}
      SANITY_WEBHOOK_SECRET: ${{ secrets.SANITY_WEBHOOK_SECRET }}
      SANITY_PREVIEW_SECRET: ${{ secrets.SANITY_PREVIEW_SECRET }}
      RESEND_API_KEY: ${{ secrets.RESEND_API_KEY }}

    steps:
      - name: 'Checkout code'
        uses: actions/checkout@v5
      - name: 'üèóÔ∏è Build All Packages'
        uses: ./.github/actions/build
        with:
          package-name: 'all-packages'
          package-filter: 'leenders-coaching-nl'
          package-path: 'packages/leenders-coaching-nl'
          build-command: 'ci:build'
          verify-command: 'ci:verify'
          analyze-bundle: false
          package-build: false
          working-directory: ''
          github-sha: ${{ github.sha }}
          env: |
            {
              "NEXT_PUBLIC_SANITY_PROJECT_ID": "${{ secrets.NEXT_PUBLIC_SANITY_PROJECT_ID }}",
              "NEXT_PUBLIC_SANITY_DATASET": "${{ secrets.NEXT_PUBLIC_SANITY_DATASET }}",
              "NEXT_PUBLIC_SANITY_API_VERSION": "${{ secrets.NEXT_PUBLIC_SANITY_API_VERSION }}",
              "NEXT_PUBLIC_STUDIO_URL": "${{ secrets.NEXT_PUBLIC_STUDIO_URL }}",
              "SANITY_VIEWER_TOKEN": "${{ secrets.SANITY_VIEWER_TOKEN }}",
              "SANITY_API_TOKEN": "${{ secrets.SANITY_API_TOKEN }}",
              "RESEND_API_KEY": "${{ secrets.RESEND_API_KEY }}"
            }
