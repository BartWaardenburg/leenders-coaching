name: 'Visual Testing & Design System'

on:
  push:
    branches: ['main', 'develop']
    paths:
      - 'packages/leenders-coaching-nl/src/components/**/*.stories.*'
      - 'packages/leenders-coaching-nl/src/components/**/*.tsx'
      - 'packages/leenders-coaching-nl/src/emails/**/*.stories.*'
      - 'packages/leenders-coaching-nl/.storybook/**'
      - 'packages/leenders-coaching-nl/tailwind.config.*'
      - 'packages/leenders-coaching-nl/src/config/**'
  pull_request:
    branches: ['main', 'develop']
    paths:
      - 'packages/leenders-coaching-nl/src/components/**/*.stories.*'
      - 'packages/leenders-coaching-nl/src/components/**/*.tsx'
      - 'packages/leenders-coaching-nl/src/emails/**/*.stories.*'
      - 'packages/leenders-coaching-nl/.storybook/**'
      - 'packages/leenders-coaching-nl/tailwind.config.*'
      - 'packages/leenders-coaching-nl/src/config/**'

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

permissions:
  contents: read
  pull-requests: write
  issues: write

env:
  NODE_VERSION: '22'
  PNPM_VERSION: '10.15.1'
  PNPM_HOME: /home/runner/.local/share/pnpm

jobs:
  # Storybook build and visual regression testing
  visual-testing:
    name: 'Visual Regression Testing'
    runs-on: ubuntu-latest
    timeout-minutes: 20

    env:
      NEXT_PUBLIC_SANITY_PROJECT_ID: ${{ secrets.NEXT_PUBLIC_SANITY_PROJECT_ID }}
      NEXT_PUBLIC_SANITY_DATASET: ${{ secrets.NEXT_PUBLIC_SANITY_DATASET }}
      NEXT_PUBLIC_SANITY_API_VERSION: ${{ secrets.NEXT_PUBLIC_SANITY_API_VERSION }}
      SANITY_API_TOKEN: ${{ secrets.SANITY_API_TOKEN }}
      RESEND_API_KEY: ${{ secrets.RESEND_API_KEY }}

    steps:
      - name: '🔄 Checkout repository'
        uses: actions/checkout@v5
        with:
          fetch-depth: 0

      - name: '🔧 Setup Node.js'
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}

      - name: '📦 Setup pnpm'
        uses: pnpm/action-setup@v4
        with:
          version: ${{ env.PNPM_VERSION }}
          run_install: false

      - name: 'Get pnpm store path'
        run: echo "PNPM_STORE_PATH=$(pnpm store path)" >> $GITHUB_ENV

      - name: '💾 Cache pnpm store'
        uses: actions/cache@v4
        with:
          path: ${{ env.PNPM_STORE_PATH }}
          key: pnpm-store-${{ runner.os }}-${{ hashFiles('**/pnpm-lock.yaml') }}
          restore-keys: |
            pnpm-store-${{ runner.os }}-

      - name: '🗂️ Cache Storybook build'
        uses: actions/cache@v4
        with:
          path: packages/leenders-coaching-nl/storybook-static
          key: storybook-${{ runner.os }}-${{ hashFiles('packages/leenders-coaching-nl/**/*.stories.*', 'packages/leenders-coaching-nl/src/components/**/*.tsx', 'packages/leenders-coaching-nl/.storybook/**/*', 'packages/leenders-coaching-nl/tailwind.config.*') }}
          restore-keys: |
            storybook-${{ runner.os }}-

      - name: '📥 Install dependencies'
        run: pnpm run ci:install:frozen

      - name: '🏗️ Build Storybook'
        run: pnpm run storybook:build
        env:
          NODE_OPTIONS: '--max_old_space_size=4096'
          NEXT_PUBLIC_SANITY_PROJECT_ID: ${{ secrets.NEXT_PUBLIC_SANITY_PROJECT_ID }}
          NEXT_PUBLIC_SANITY_DATASET: ${{ secrets.NEXT_PUBLIC_SANITY_DATASET }}
          NEXT_PUBLIC_SANITY_API_VERSION: ${{ secrets.NEXT_PUBLIC_SANITY_API_VERSION }}
          SANITY_API_TOKEN: ${{ secrets.SANITY_API_TOKEN }}
          RESEND_API_KEY: ${{ secrets.RESEND_API_KEY }}

      - name: '📊 Analyze Storybook build'
        run: pnpm --filter leenders-coaching-nl run analyze:storybook

      - name: '🎨 Run Chromatic'
        id: chromatic
        uses: chromaui/action@latest
        env:
          NEXT_PUBLIC_SANITY_PROJECT_ID: ${{ secrets.NEXT_PUBLIC_SANITY_PROJECT_ID }}
          NEXT_PUBLIC_SANITY_DATASET: ${{ secrets.NEXT_PUBLIC_SANITY_DATASET }}
          NEXT_PUBLIC_SANITY_API_VERSION: ${{ secrets.NEXT_PUBLIC_SANITY_API_VERSION }}
          SANITY_API_TOKEN: ${{ secrets.SANITY_API_TOKEN }}
          RESEND_API_KEY: ${{ secrets.RESEND_API_KEY }}
        with:
          projectToken: ${{ secrets.CHROMATIC_PROJECT_TOKEN }}
          workingDir: packages/leenders-coaching-nl
          storybookBuildDir: storybook-static
          onlyChanged: true
          exitZeroOnChanges: true
          exitOnceUploaded: true
          ignoreLastBuildOnBranch: ${{ github.event_name == 'pull_request' }}
          skip: ${{ github.event_name == 'push' && github.ref != 'refs/heads/main' && github.ref != 'refs/heads/develop' }}

      - name: '💬 Sticky PR comment – Visual/Chromatic'
        if: github.event_name == 'pull_request'
        uses: marocchino/sticky-pull-request-comment@v2
        with:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          header: visual-testing
          number: ${{ github.event.pull_request.number }}
          message: |
            ## 🎨 Visual Regression & Storybook
            - **Chromatic build:** ${{ steps.chromatic.outputs.buildUrl || steps.chromatic.outputs.storybookUrl || 'See workflow checks' }}
            - **Artifacts:** Storybook build uploaded for this run.
            - **Branch:** `${{ github.ref_name }}` • **Commit:** `${{ github.sha }}`

      - name: '📤 Upload Storybook artifacts'
        uses: actions/upload-artifact@v4
        if: always()
        with:
          name: storybook-build-${{ github.sha }}
          path: packages/leenders-coaching-nl/storybook-static
          retention-days: 7

  # Component accessibility testing
  accessibility-testing:
    name: 'Accessibility Testing'
    runs-on: ubuntu-latest
    timeout-minutes: 15

    env:
      NEXT_PUBLIC_SANITY_PROJECT_ID: ${{ secrets.NEXT_PUBLIC_SANITY_PROJECT_ID }}
      NEXT_PUBLIC_SANITY_DATASET: ${{ secrets.NEXT_PUBLIC_SANITY_DATASET }}
      NEXT_PUBLIC_SANITY_API_VERSION: ${{ secrets.NEXT_PUBLIC_SANITY_API_VERSION }}
      SANITY_API_TOKEN: ${{ secrets.SANITY_API_TOKEN }}
      RESEND_API_KEY: ${{ secrets.RESEND_API_KEY }}

    steps:
      - name: '🔄 Checkout repository'
        uses: actions/checkout@v5

      - name: '🔧 Setup Node.js'
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}

      - name: '📦 Setup pnpm'
        uses: pnpm/action-setup@v4
        with:
          version: ${{ env.PNPM_VERSION }}
          run_install: false

      - name: 'Get pnpm store path'
        run: echo "PNPM_STORE_PATH=$(pnpm store path)" >> $GITHUB_ENV

      - name: '💾 Cache pnpm store'
        uses: actions/cache@v4
        with:
          path: ${{ env.PNPM_STORE_PATH }}
          key: pnpm-store-${{ runner.os }}-${{ hashFiles('**/pnpm-lock.yaml') }}
          restore-keys: |
            pnpm-store-${{ runner.os }}-

      - name: '📥 Install dependencies'
        run: pnpm run ci:install:frozen

      - name: '🏗️ Build Storybook for testing'
        run: pnpm run storybook:build
        env:
          NEXT_PUBLIC_SANITY_PROJECT_ID: ${{ secrets.NEXT_PUBLIC_SANITY_PROJECT_ID }}
          NEXT_PUBLIC_SANITY_DATASET: ${{ secrets.NEXT_PUBLIC_SANITY_DATASET }}
          NEXT_PUBLIC_SANITY_API_VERSION: ${{ secrets.NEXT_PUBLIC_SANITY_API_VERSION }}
          SANITY_API_TOKEN: ${{ secrets.SANITY_API_TOKEN }}
          RESEND_API_KEY: ${{ secrets.RESEND_API_KEY }}

      - name: '🔍 Install Playwright browsers'
        run: pnpm --filter leenders-coaching-nl run ci:install-playwright

      - name: '♿ Run accessibility tests'
        run: pnpm --filter leenders-coaching-nl run ci:test-a11y
        continue-on-error: true

      - name: '💬 Sticky PR comment – A11y'
        if: github.event_name == 'pull_request'
        uses: marocchino/sticky-pull-request-comment@v2
        with:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          header: a11y-tests
          number: ${{ github.event.pull_request.number }}
          message: |
            ## ♿ Component Accessibility
            - Playwright/axe tests executed against Storybook.
            - Review job logs for any violations (this job is non-blocking).

      - name: '📊 Generate accessibility report'
        run: |
          echo "## ♿ Accessibility Test Results" >> $GITHUB_STEP_SUMMARY
          echo "Accessibility tests completed for component library" >> $GITHUB_STEP_SUMMARY
          echo "Review any issues in the logs above" >> $GITHUB_STEP_SUMMARY

  # Performance testing for components
  performance-testing:
    name: 'Component Performance'
    runs-on: ubuntu-latest
    if: github.event_name == 'push' && (github.ref == 'refs/heads/main' || github.ref == 'refs/heads/develop')
    timeout-minutes: 15

    env:
      NEXT_PUBLIC_SANITY_PROJECT_ID: ${{ secrets.NEXT_PUBLIC_SANITY_PROJECT_ID }}
      NEXT_PUBLIC_SANITY_DATASET: ${{ secrets.NEXT_PUBLIC_SANITY_DATASET }}
      NEXT_PUBLIC_SANITY_API_VERSION: ${{ secrets.NEXT_PUBLIC_SANITY_API_VERSION }}
      SANITY_API_TOKEN: ${{ secrets.SANITY_API_TOKEN }}
      RESEND_API_KEY: ${{ secrets.RESEND_API_KEY }}

    steps:
      - name: '🔄 Checkout repository'
        uses: actions/checkout@v5

      - name: '🔧 Setup Node.js'
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}

      - name: '📦 Setup pnpm'
        uses: pnpm/action-setup@v4
        with:
          version: ${{ env.PNPM_VERSION }}
          run_install: false

      - name: 'Get pnpm store path'
        run: echo "PNPM_STORE_PATH=$(pnpm store path)" >> $GITHUB_ENV

      - name: '💾 Cache pnpm store'
        uses: actions/cache@v4
        with:
          path: ${{ env.PNPM_STORE_PATH }}
          key: pnpm-store-${{ runner.os }}-${{ hashFiles('**/pnpm-lock.yaml') }}
          restore-keys: |
            pnpm-store-${{ runner.os }}-

      - name: '📥 Install dependencies'
        run: pnpm run ci:install:frozen

      - name: '⚡ Analyze bundle performance'
        run: pnpm --filter leenders-coaching-nl run verify:performance

      - name: '📈 Performance summary'
        run: |
          echo "## ⚡ Performance Analysis" >> $GITHUB_STEP_SUMMARY
          echo "Component library performance metrics have been analyzed" >> $GITHUB_STEP_SUMMARY
          echo "Check the logs above for detailed bundle information" >> $GITHUB_STEP_SUMMARY

  # Design token validation
  design-system-validation:
    name: 'Design System Validation'
    runs-on: ubuntu-latest
    timeout-minutes: 8

    steps:
      - name: '🔄 Checkout repository'
        uses: actions/checkout@v5

      - name: '🔧 Setup Node.js'
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}

      - name: '📦 Setup pnpm'
        uses: pnpm/action-setup@v4
        with:
          version: ${{ env.PNPM_VERSION }}
          run_install: false

      - name: 'Get pnpm store path'
        run: echo "PNPM_STORE_PATH=$(pnpm store path)" >> $GITHUB_ENV

      - name: '💾 Cache pnpm store'
        uses: actions/cache@v4
        with:
          path: ${{ env.PNPM_STORE_PATH }}
          key: pnpm-store-${{ runner.os }}-${{ hashFiles('**/pnpm-lock.yaml') }}
          restore-keys: |
            pnpm-store-${{ runner.os }}-

      - name: '📥 Install dependencies'
        run: pnpm run ci:install:frozen

      - name: '🎨 Validate Tailwind configuration'
        run: pnpm --filter leenders-coaching-nl run validate:tailwind
      - name: '📊 Design system summary'
        run: |
          echo "## 🎨 Design System Status" >> $GITHUB_STEP_SUMMARY
          echo "- ✅ Tailwind configuration validated" >> $GITHUB_STEP_SUMMARY
          echo "- ✅ Component styles verified" >> $GITHUB_STEP_SUMMARY
          echo "- ✅ Design tokens consistent" >> $GITHUB_STEP_SUMMARY

      - name: '💬 Sticky PR comment – Design System'
        if: github.event_name == 'pull_request'
        uses: marocchino/sticky-pull-request-comment@v2
        with:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          header: design-system
          number: ${{ github.event.pull_request.number }}
          message: |
            ## 🎨 Design System Validation
            - ✅ Tailwind configuration validated  
            - ✅ Component styles verified  
            - ✅ Design tokens consistent
