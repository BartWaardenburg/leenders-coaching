import { publishedClient } from '@/utilities/sanity';
import { defineEnableDraftMode } from 'next-sanity/draft-mode';

/**
 * @file API route for enabling Sanity draft mode in Next.js.
 *
 * This route enables draft mode for previewing unpublished content from Sanity Studio.
 * It uses a special Sanity client with a viewer token to allow access to draft content.
 *
 * - The route is dynamic and disables ISR caching.
 * - The GET handler is generated by next-sanity's defineEnableDraftMode utility.
 * - The client is configured with a token and a Studio URL for stega (preview) support.
 *
 * @see https://www.sanity.io/docs/draft-content-preview
 * @see https://github.com/sanity-io/next-sanity#draft-mode
 */

/**
 * Forces this API route to be dynamic, ensuring it is always executed on the server
 * and not statically optimized or cached by Next.js.
 *
 * @type {'force-dynamic'}
 */
export const dynamic = 'force-dynamic';

/**
 * Disables revalidation for this route, ensuring that no ISR (Incremental Static Regeneration)
 * is performed and the route is always fresh.
 *
 * @type {0}
 */
export const revalidate = 0;

/**
 * GET handler for enabling Sanity draft mode.
 *
 * This handler is created using next-sanity's defineEnableDraftMode, which sets the necessary
 * cookies and session state to enable draft mode for the current user. The handler uses a
 * Sanity client configured with a viewer token (from the SANITY_VIEWER_TOKEN environment variable)
 * to allow access to draft content. The stega.studioUrl option is set to the public Studio URL,
 * falling back to a default if not provided.
 *
 * @see https://github.com/sanity-io/next-sanity#draft-mode
 *
 * @example
 * // To enable draft mode, send a GET request to this route:
 * // GET /api/draft/enable
 */
export const { GET } = defineEnableDraftMode({
  client: publishedClient.withConfig({
    token: process.env.SANITY_VIEWER_TOKEN!,
    stega: {
      studioUrl:
        process.env.NEXT_PUBLIC_SANITY_STUDIO_URL ||
        'https://studio.leenders-coaching.nl',
    },
  }),
});
