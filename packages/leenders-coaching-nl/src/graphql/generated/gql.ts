/* eslint-disable */
import * as types from './graphql';
import type { TypedDocumentNode as DocumentNode } from '@graphql-typed-document-node/core';

/**
 * Map of all GraphQL operations in the project.
 *
 * This map has several performance disadvantages:
 * 1. It is not tree-shakeable, so it will include all operations in the project.
 * 2. It is not minifiable, so the string of a GraphQL query will be multiple times inside the bundle.
 * 3. It does not support dead code elimination, so it will add unused operations.
 *
 * Therefore it is highly recommended to use the babel or swc plugin for production.
 * Learn more about it here: https://the-guild.dev/graphql/codegen/plugins/presets/preset-client#reducing-bundle-size
 */
const documents = {
  '\n  query AboutPage {\n    allAboutPage {\n      _id\n      title\n      sections {\n        __typename\n        ... on SectionBlog {\n          _key\n          _type\n          title\n          displayTitle\n          subtitle\n          background\n          maxWidth\n          showBorder\n          postsToShow\n          showFeaturedOnly\n          sortOrder\n        }\n        ... on SectionCalendar {\n          _key\n          _type\n          title\n          displayTitle\n          subtitle\n          background\n          maxWidth\n          showBorder\n          description\n          settings {\n            availableDays\n            excludedDates\n            availableTimeSlots {\n              _key\n              startTime\n              endTime\n            }\n          }\n        }\n        ... on SectionCards {\n          _key\n          _type\n          title\n          displayTitle\n          subtitle\n          background\n          maxWidth\n          showBorder\n          cards {\n            _key\n            title\n            description\n            image {\n              asset {\n                url\n                metadata {\n                  dimensions {\n                    width\n                    height\n                  }\n                }\n              }\n            }\n            link {\n              text\n              url\n            }\n          }\n        }\n        ... on SectionContent {\n          _key\n          _type\n          title\n          displayTitle\n          contentRaw\n          background\n          maxWidth\n          showBorder\n        }\n        ... on SectionFAQ {\n          _key\n          _type\n          title\n          displayTitle\n          subtitle\n          background\n          maxWidth\n          showBorder\n          questions {\n            _key\n            question\n            answer\n          }\n        }\n        ... on SectionFeatured {\n          _key\n          _type\n          title\n          displayTitle\n          subtitle\n          background\n          maxWidth\n          showBorder\n          items {\n            _key\n            title\n            description\n            image {\n              asset {\n                url\n                metadata {\n                  dimensions {\n                    width\n                    height\n                  }\n                }\n              }\n            }\n          }\n        }\n        ... on SectionForm {\n          _key\n          _type\n          title\n          displayTitle\n          subtitle\n          background\n          maxWidth\n          showBorder\n          form {\n            submitLabel\n            successMessage\n            errorMessage\n          }\n        }\n        ... on SectionHeader {\n          _key\n          _type\n          title\n          displayTitle\n          subtitle\n          background\n          maxWidth\n          showBorder\n          image {\n            asset {\n              url\n              metadata {\n                dimensions {\n                  width\n                  height\n                }\n              }\n            }\n          }\n          cta {\n            text\n            link\n            variant\n          }\n        }\n        ... on SectionPricing {\n          _key\n          _type\n          title\n          displayTitle\n          subtitle\n          background\n          maxWidth\n          showBorder\n          pricingCards {\n            _key\n            title\n            price\n            description\n            features\n            isPopular\n            variant\n            cta {\n              text\n              link\n              variant\n            }\n          }\n        }\n      }\n      metadata {\n        title\n        description\n        keywords\n        image {\n          asset {\n            url\n            altText\n          }\n        }\n      }\n    }\n  }\n':
    types.AboutPageDocument,
  '\n  query AllPosts {\n    allPost {\n      _id\n      title\n      description\n      slug {\n        current\n      }\n      image {\n        asset {\n          url\n          metadata {\n            dimensions {\n              width\n              height\n            }\n          }\n        }\n      }\n      publishedAt\n      categories\n      featured\n      variant\n    }\n  }\n':
    types.AllPostsDocument,
  '\n  query PostBySlug($current: String!) {\n    allPost(where: { slug: { current: { eq: $current } } }) {\n      _id\n      title\n      description\n      slug {\n        current\n      }\n      image {\n        asset {\n          url\n          metadata {\n            dimensions {\n              width\n              height\n            }\n          }\n        }\n      }\n      contentRaw\n      publishedAt\n      categories\n      featured\n      variant\n      metadata {\n        title\n        description\n        keywords\n        image {\n          asset {\n            url\n            altText\n          }\n        }\n      }\n    }\n  }\n':
    types.PostBySlugDocument,
  '\n  query SiteSettings {\n    allSiteSettings {\n      title\n      description\n      keywords\n      defaultMetaImage {\n        asset {\n          url\n          altText\n        }\n      }\n    }\n  }\n':
    types.SiteSettingsDocument,
  '\n  query Navigation {\n    allNavigation {\n      _id\n      items {\n        _key\n        label\n        href\n      }\n    }\n  }\n':
    types.NavigationDocument,
  '\n  query Footer {\n    allFooter {\n      _id\n      copyright\n      contact {\n        email\n        phone\n      }\n      socialLinks {\n        _key\n        platform\n        url\n      }\n    }\n  }\n':
    types.FooterDocument,
  '\n  query MenuFooter {\n    allMenuFooter {\n      _id\n      about {\n        title\n        description\n      }\n      social {\n        title\n      }\n      contact {\n        title\n        projectEnquiry {\n          label\n          href\n          linkText\n        }\n        generalEnquiry {\n          label\n          href\n          linkText\n        }\n      }\n    }\n  }\n':
    types.MenuFooterDocument,
};

/**
 * The graphql function is used to parse GraphQL queries into a document that can be used by GraphQL clients.
 *
 *
 * @example
 * ```ts
 * const query = graphql(`query GetUser($id: ID!) { user(id: $id) { name } }`);
 * ```
 *
 * The query argument is unknown!
 * Please regenerate the types.
 */
export function graphql(source: string): unknown;

/**
 * The graphql function is used to parse GraphQL queries into a document that can be used by GraphQL clients.
 */
export function graphql(
  source: '\n  query AboutPage {\n    allAboutPage {\n      _id\n      title\n      sections {\n        __typename\n        ... on SectionBlog {\n          _key\n          _type\n          title\n          displayTitle\n          subtitle\n          background\n          maxWidth\n          showBorder\n          postsToShow\n          showFeaturedOnly\n          sortOrder\n        }\n        ... on SectionCalendar {\n          _key\n          _type\n          title\n          displayTitle\n          subtitle\n          background\n          maxWidth\n          showBorder\n          description\n          settings {\n            availableDays\n            excludedDates\n            availableTimeSlots {\n              _key\n              startTime\n              endTime\n            }\n          }\n        }\n        ... on SectionCards {\n          _key\n          _type\n          title\n          displayTitle\n          subtitle\n          background\n          maxWidth\n          showBorder\n          cards {\n            _key\n            title\n            description\n            image {\n              asset {\n                url\n                metadata {\n                  dimensions {\n                    width\n                    height\n                  }\n                }\n              }\n            }\n            link {\n              text\n              url\n            }\n          }\n        }\n        ... on SectionContent {\n          _key\n          _type\n          title\n          displayTitle\n          contentRaw\n          background\n          maxWidth\n          showBorder\n        }\n        ... on SectionFAQ {\n          _key\n          _type\n          title\n          displayTitle\n          subtitle\n          background\n          maxWidth\n          showBorder\n          questions {\n            _key\n            question\n            answer\n          }\n        }\n        ... on SectionFeatured {\n          _key\n          _type\n          title\n          displayTitle\n          subtitle\n          background\n          maxWidth\n          showBorder\n          items {\n            _key\n            title\n            description\n            image {\n              asset {\n                url\n                metadata {\n                  dimensions {\n                    width\n                    height\n                  }\n                }\n              }\n            }\n          }\n        }\n        ... on SectionForm {\n          _key\n          _type\n          title\n          displayTitle\n          subtitle\n          background\n          maxWidth\n          showBorder\n          form {\n            submitLabel\n            successMessage\n            errorMessage\n          }\n        }\n        ... on SectionHeader {\n          _key\n          _type\n          title\n          displayTitle\n          subtitle\n          background\n          maxWidth\n          showBorder\n          image {\n            asset {\n              url\n              metadata {\n                dimensions {\n                  width\n                  height\n                }\n              }\n            }\n          }\n          cta {\n            text\n            link\n            variant\n          }\n        }\n        ... on SectionPricing {\n          _key\n          _type\n          title\n          displayTitle\n          subtitle\n          background\n          maxWidth\n          showBorder\n          pricingCards {\n            _key\n            title\n            price\n            description\n            features\n            isPopular\n            variant\n            cta {\n              text\n              link\n              variant\n            }\n          }\n        }\n      }\n      metadata {\n        title\n        description\n        keywords\n        image {\n          asset {\n            url\n            altText\n          }\n        }\n      }\n    }\n  }\n',
): (typeof documents)['\n  query AboutPage {\n    allAboutPage {\n      _id\n      title\n      sections {\n        __typename\n        ... on SectionBlog {\n          _key\n          _type\n          title\n          displayTitle\n          subtitle\n          background\n          maxWidth\n          showBorder\n          postsToShow\n          showFeaturedOnly\n          sortOrder\n        }\n        ... on SectionCalendar {\n          _key\n          _type\n          title\n          displayTitle\n          subtitle\n          background\n          maxWidth\n          showBorder\n          description\n          settings {\n            availableDays\n            excludedDates\n            availableTimeSlots {\n              _key\n              startTime\n              endTime\n            }\n          }\n        }\n        ... on SectionCards {\n          _key\n          _type\n          title\n          displayTitle\n          subtitle\n          background\n          maxWidth\n          showBorder\n          cards {\n            _key\n            title\n            description\n            image {\n              asset {\n                url\n                metadata {\n                  dimensions {\n                    width\n                    height\n                  }\n                }\n              }\n            }\n            link {\n              text\n              url\n            }\n          }\n        }\n        ... on SectionContent {\n          _key\n          _type\n          title\n          displayTitle\n          contentRaw\n          background\n          maxWidth\n          showBorder\n        }\n        ... on SectionFAQ {\n          _key\n          _type\n          title\n          displayTitle\n          subtitle\n          background\n          maxWidth\n          showBorder\n          questions {\n            _key\n            question\n            answer\n          }\n        }\n        ... on SectionFeatured {\n          _key\n          _type\n          title\n          displayTitle\n          subtitle\n          background\n          maxWidth\n          showBorder\n          items {\n            _key\n            title\n            description\n            image {\n              asset {\n                url\n                metadata {\n                  dimensions {\n                    width\n                    height\n                  }\n                }\n              }\n            }\n          }\n        }\n        ... on SectionForm {\n          _key\n          _type\n          title\n          displayTitle\n          subtitle\n          background\n          maxWidth\n          showBorder\n          form {\n            submitLabel\n            successMessage\n            errorMessage\n          }\n        }\n        ... on SectionHeader {\n          _key\n          _type\n          title\n          displayTitle\n          subtitle\n          background\n          maxWidth\n          showBorder\n          image {\n            asset {\n              url\n              metadata {\n                dimensions {\n                  width\n                  height\n                }\n              }\n            }\n          }\n          cta {\n            text\n            link\n            variant\n          }\n        }\n        ... on SectionPricing {\n          _key\n          _type\n          title\n          displayTitle\n          subtitle\n          background\n          maxWidth\n          showBorder\n          pricingCards {\n            _key\n            title\n            price\n            description\n            features\n            isPopular\n            variant\n            cta {\n              text\n              link\n              variant\n            }\n          }\n        }\n      }\n      metadata {\n        title\n        description\n        keywords\n        image {\n          asset {\n            url\n            altText\n          }\n        }\n      }\n    }\n  }\n'];
/**
 * The graphql function is used to parse GraphQL queries into a document that can be used by GraphQL clients.
 */
export function graphql(
  source: '\n  query AllPosts {\n    allPost {\n      _id\n      title\n      description\n      slug {\n        current\n      }\n      image {\n        asset {\n          url\n          metadata {\n            dimensions {\n              width\n              height\n            }\n          }\n        }\n      }\n      publishedAt\n      categories\n      featured\n      variant\n    }\n  }\n',
): (typeof documents)['\n  query AllPosts {\n    allPost {\n      _id\n      title\n      description\n      slug {\n        current\n      }\n      image {\n        asset {\n          url\n          metadata {\n            dimensions {\n              width\n              height\n            }\n          }\n        }\n      }\n      publishedAt\n      categories\n      featured\n      variant\n    }\n  }\n'];
/**
 * The graphql function is used to parse GraphQL queries into a document that can be used by GraphQL clients.
 */
export function graphql(
  source: '\n  query PostBySlug($current: String!) {\n    allPost(where: { slug: { current: { eq: $current } } }) {\n      _id\n      title\n      description\n      slug {\n        current\n      }\n      image {\n        asset {\n          url\n          metadata {\n            dimensions {\n              width\n              height\n            }\n          }\n        }\n      }\n      contentRaw\n      publishedAt\n      categories\n      featured\n      variant\n      metadata {\n        title\n        description\n        keywords\n        image {\n          asset {\n            url\n            altText\n          }\n        }\n      }\n    }\n  }\n',
): (typeof documents)['\n  query PostBySlug($current: String!) {\n    allPost(where: { slug: { current: { eq: $current } } }) {\n      _id\n      title\n      description\n      slug {\n        current\n      }\n      image {\n        asset {\n          url\n          metadata {\n            dimensions {\n              width\n              height\n            }\n          }\n        }\n      }\n      contentRaw\n      publishedAt\n      categories\n      featured\n      variant\n      metadata {\n        title\n        description\n        keywords\n        image {\n          asset {\n            url\n            altText\n          }\n        }\n      }\n    }\n  }\n'];
/**
 * The graphql function is used to parse GraphQL queries into a document that can be used by GraphQL clients.
 */
export function graphql(
  source: '\n  query SiteSettings {\n    allSiteSettings {\n      title\n      description\n      keywords\n      defaultMetaImage {\n        asset {\n          url\n          altText\n        }\n      }\n    }\n  }\n',
): (typeof documents)['\n  query SiteSettings {\n    allSiteSettings {\n      title\n      description\n      keywords\n      defaultMetaImage {\n        asset {\n          url\n          altText\n        }\n      }\n    }\n  }\n'];
/**
 * The graphql function is used to parse GraphQL queries into a document that can be used by GraphQL clients.
 */
export function graphql(
  source: '\n  query Navigation {\n    allNavigation {\n      _id\n      items {\n        _key\n        label\n        href\n      }\n    }\n  }\n',
): (typeof documents)['\n  query Navigation {\n    allNavigation {\n      _id\n      items {\n        _key\n        label\n        href\n      }\n    }\n  }\n'];
/**
 * The graphql function is used to parse GraphQL queries into a document that can be used by GraphQL clients.
 */
export function graphql(
  source: '\n  query Footer {\n    allFooter {\n      _id\n      copyright\n      contact {\n        email\n        phone\n      }\n      socialLinks {\n        _key\n        platform\n        url\n      }\n    }\n  }\n',
): (typeof documents)['\n  query Footer {\n    allFooter {\n      _id\n      copyright\n      contact {\n        email\n        phone\n      }\n      socialLinks {\n        _key\n        platform\n        url\n      }\n    }\n  }\n'];
/**
 * The graphql function is used to parse GraphQL queries into a document that can be used by GraphQL clients.
 */
export function graphql(
  source: '\n  query MenuFooter {\n    allMenuFooter {\n      _id\n      about {\n        title\n        description\n      }\n      social {\n        title\n      }\n      contact {\n        title\n        projectEnquiry {\n          label\n          href\n          linkText\n        }\n        generalEnquiry {\n          label\n          href\n          linkText\n        }\n      }\n    }\n  }\n',
): (typeof documents)['\n  query MenuFooter {\n    allMenuFooter {\n      _id\n      about {\n        title\n        description\n      }\n      social {\n        title\n      }\n      contact {\n        title\n        projectEnquiry {\n          label\n          href\n          linkText\n        }\n        generalEnquiry {\n          label\n          href\n          linkText\n        }\n      }\n    }\n  }\n'];

export function graphql(source: string) {
  return (documents as any)[source] ?? {};
}

export type DocumentType<TDocumentNode extends DocumentNode<any, any>> =
  TDocumentNode extends DocumentNode<infer TType, any> ? TType : never;
